var facebookAppId;
! function(e, t, o) {
    var n = e.getElementsByTagName(t)[0];
    e.getElementById(o) || ((t = e.createElement(t)).id = o, t.src = "//connect.facebook.net/en_US/sdk.js", n.parentNode.insertBefore(t, n))
}(document, "script", "facebook-jssdk"), (facebookAppId = "undefined" != typeof eltdfSocialLoginVars ? eltdfSocialLoginVars.social.facebookAppId : facebookAppId) && (window.fbAsyncInit = function() {
    FB.init({
        appId: facebookAppId,
        cookie: !0,
        xfbml: !0,
        version: "v2.5"
    }), window.FB = FB
}),
function(a) {
    "use strict";
    var e = {};

    function t() {
        var e, t = a(".eltdf-login-opener"),
            o = a(".eltdf-login-register-holder");
        a(document.body).on("open_user_login_trigger", function() {
            o.fadeIn(300), o.addClass("opened")
        }), t && (e = a(".eltdf-login-register-content"), t.on("click", function(e) {
            e.preventDefault(), o.fadeIn(300), o.addClass("opened")
        }), o.on("click", function(e) {
            o.hasClass("opened") && (o.fadeOut(300), o.removeClass("opened"))
        }), e.on("click", function(e) {
            e.stopPropagation()
        }), a(window).on("keyup", function(e) {
            o.hasClass("opened") && 27 === e.keyCode && (o.fadeOut(300), o.removeClass("opened"))
        }), e.tabs())
    }

    function o() {
        a(".eltdf-login-form").on("submit", function(e) {
            e.preventDefault();
            e = {
                action: "onea_membership_login_user",
                security: a(this).find("#eltdf-login-security").val(),
                login_data: a(this).serialize()
            };
            return a.ajax({
                type: "POST",
                data: e,
                url: eltdfGlobalVars.vars.eltdfAjaxUrl,
                success: function(e) {
                    e = JSON.parse(e);
                    i(e), "success" === e.status && (window.location = e.redirect)
                }
            }), !1
        })
    }

    function n() {
        a(".eltdf-register-form").on("submit", function(e) {
            e.preventDefault();
            e = {
                action: "onea_membership_register_user",
                security: a(this).find("#eltdf-register-security").val(),
                register_data: a(this).serialize()
            };
            return a.ajax({
                type: "POST",
                data: e,
                url: eltdfGlobalVars.vars.eltdfAjaxUrl,
                success: function(e) {
                    e = JSON.parse(e);
                    i(e), "success" === e.status && (window.location = e.redirect)
                }
            }), !1
        })
    }

    function s() {
        var t = a(".eltdf-reset-pass-form");
        t.on("submit", function(e) {
            e.preventDefault();
            e = {
                action: "onea_membership_user_lost_password",
                user_login: t.find("#user_reset_password_login").val()
            };
            a.ajax({
                type: "POST",
                data: e,
                url: eltdfGlobalVars.vars.eltdfAjaxUrl,
                success: function(e) {
                    e = JSON.parse(e);
                    i(e), "success" === e.status && (window.location = e.redirect)
                }
            })
        })
    }

    function i(e) {
        var t = a(".eltdf-membership-response-holder"),
            o = _.template(a(".eltdf-membership-response-template").html()),
            n = "success" === e.status ? "eltdf-membership-message-succes" : "eltdf-membership-message-error",
            e = o({
                messageClass: n,
                message: e.message
            });
        t.html(e)
    }

    function l() {
        a(".eltdf-facebook-login-holder").on("submit", function(e) {
            e.preventDefault(), window.FB.login(function(e) {
                "connected" === (e = e).status ? (console.log("Welcome! Fetching information from Facebook..."), FB.api("/me", "GET", {
                    fields: "id, name, email, link, picture"
                }, function(e) {
                    var t = a(".eltdf-facebook-login-holder [name^=eltdf_nonce_facebook_login]").val();
                    e.nonce = t, e.image = e.picture.data.url, a.ajax({
                        type: "POST",
                        data: {
                            action: "onea_membership_check_facebook_user",
                            response: e
                        },
                        url: eltdfGlobalVars.vars.eltdfAjaxUrl,
                        success: function(e) {
                            e = JSON.parse(e);
                            i(e), "success" === e.status && (window.location = e.redirect)
                        }
                    })
                })) : "not_authorized" === e.status ? console.log("Please log into this app") : console.log("Please log into Facebook")
            }, {
                scope: "email, public_profile"
            })
        })
    }

    function r() {
        var e;
        (e = "undefined" != typeof eltdfSocialLoginVars ? eltdfSocialLoginVars.social.googleClientId : e) ? gapi.load("auth2", function() {
            window.auth2 = gapi.auth2.init({
                client_id: e
            }), a(".eltdf-google-login-holder").on("submit", function(e) {
                e.preventDefault(), window.auth2.signIn(),
                    function() {
                        {
                            var e, t;
                            window.auth2.isSignedIn.get() && (e = window.auth2.currentUser.get().getBasicProfile(), t = a(".eltdf-google-login-holder [name^=eltdf_nonce_google_login]").val(), t = {
                                action: "onea_membership_check_google_user",
                                response: {
                                    id: e.getId(),
                                    name: e.getName(),
                                    email: e.getEmail(),
                                    image: e.getImageUrl(),
                                    link: "https://plus.google.com/" + e.getId(),
                                    nonce: t
                                }
                            }, a.ajax({
                                type: "POST",
                                data: t,
                                url: eltdfGlobalVars.vars.eltdfAjaxUrl,
                                success: function(e) {
                                    e = JSON.parse(e);
                                    i(e), "success" === e.status && (window.location = e.redirect)
                                }
                            }))
                        }
                    }()
            })
        }): a(".eltdf-google-login-holder").on("submit", function(e) {
            e.preventDefault()
        })
    }
    "undefined" != typeof eltdf && (eltdf.modules.socialLogin = e), e.eltdfUserLogin = o, e.eltdfUserRegister = n, e.eltdfUserLostPassword = s, e.eltdfInitLoginWidgetModal = t, e.eltdfInitFacebookLogin = l, e.eltdfInitGooglePlusLogin = r, e.eltdfRenderAjaxResponseMessage = i, a(document).ready(function() {
        t(), o(), n(), s()
    }), a(window).on("load", function() {
        l(), r(),
            function() {
                a(".eltdf-membership-main-wrapper");
                var e = a(".page-template-user-dashboard .eltdf-content"),
                    t = a(".eltdf-page-footer"),
                    o = 0;
                !eltdf.body.hasClass("eltdf-header-transparent") && 1024 < eltdf.windowWidth && (o = o + eltdfGlobalVars.vars.eltdfMenuAreaHeight + eltdfGlobalVars.vars.eltdfLogoAreaHeight);
                0 < t.length && (o += t.outerHeight());
                1024 < eltdf.windowWidth && (o = eltdf.windowHeight - o, e.css({
                    "min-height": o + "px"
                }))
            }()
    })
}(jQuery),
function(o) {
    "use strict";
    var e = {};

    function t() {
        n(), o(document.body).on("onea_membership_favorites_trigger", function() {
            n()
        })
    }

    function n() {
        o(".eltdf-membership-item-favorites").on("click", function(e) {
            e.preventDefault();
            var t, e = o(this);
            void 0 !== e.data("item-id") && (t = e.data("item-id")),
                function(t, e) {
                    e = {
                        action: "onea_membership_add_item_to_favorites",
                        item_id: e
                    };
                    o.ajax({
                        type: "POST",
                        data: e,
                        url: eltdfGlobalVars.vars.eltdfAjaxUrl,
                        success: function(e) {
                            e = JSON.parse(e);
                            "success" === e.status && (t.hasClass("eltdf-icon-only") || t.find("span").text(e.data.message), t.find(".eltdf-favorites-icon").removeClass("fa-heart fa-heart-o").addClass(e.data.icon))
                        }
                    })
                }(e, t)
        })
    }(eltdf.modules.membershipFavorites = e).eltdfOnDocumentReady = t, o(document).ready(t)
}(jQuery);